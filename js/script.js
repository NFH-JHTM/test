document.addEventListener("DOMContentLoaded", function () {
    console.log("Script Loaded! üöÄ");

    // üå∏ T·∫°o Profile Card t·ª± ƒë·ªông
    let grid = document.querySelector(".grid");
    if (grid) {
        for (let i = 1; i <= 28; i++) {
            let card = document.createElement("a");
            card.href = `pages/person${i}.html`;
            card.classList.add("card");

            card.innerHTML = `
                <img src="images/person${i}.webp" alt="Person ${i}">
                <div class="info">
                    <h2>Nh√¢n v·∫≠t ${i}</h2>
                </div>
            `;

            grid.appendChild(card);
        }
    }

    // üîç T√¨m ki·∫øm Profile
    document.getElementById("searchBar").addEventListener("keyup", function () {
        let input = this.value.toLowerCase();
        let cards = document.querySelectorAll(".card");

        cards.forEach(card => {
            let name = card.querySelector(".info h2").innerText.toLowerCase();
            card.style.display = name.includes(input) ? "block" : "none";
        });
    });

    // üÉè Hover Effect cho Card
    let cards = document.querySelectorAll(".card");
    cards.forEach(card => {
        card.addEventListener("mouseenter", () => {
            card.style.transform = "translateY(-5px)";
            card.style.boxShadow = "0 8px 20px rgba(0, 0, 0, 0.2)";
        });

        card.addEventListener("mouseleave", () => {
            card.style.transform = "translateY(0)";
            card.style.boxShadow = "0 4px 10px rgba(0, 0, 0, 0.1)";
        });
    });

    // ‚è≥ Loading Screen (Ch·ªâ Ch·∫°y ·ªû Trang Ch·ªß)
    const loadingScreen = document.querySelector(".loading-screen");
    if (loadingScreen) {
        let progress = 0;
        const previousPage = document.referrer;

        if (previousPage.includes("person")) {
            loadingScreen.style.display = "none";
        } else {
            function updateLoading() {
                progress += Math.random() * 5 + 3;
                if (progress > 100) progress = 100;

                document.querySelector(".loading-bar").style.width = progress + "%";
                document.querySelector(".loading-text").innerText = `Loading... ${Math.floor(progress)}%`;

                if (progress < 100) {
                    setTimeout(updateLoading, 300);
                } else {
                    setTimeout(() => {
                        loadingScreen.style.opacity = "0";
                        setTimeout(() => {
                            loadingScreen.style.display = "none";
                        }, 500);
                    }, 500);
                }
            }
            setTimeout(updateLoading, 500);
        }
    }


    // üå∏ Danh s√°ch hi·ªáu ·ª©ng cho t·ª´ng ng∆∞·ªùi
    const effects = [
        "üå∏", "üçÇ", "üé∂", "üíñ", "‚ú®", "üî•", "‚ùÑÔ∏è", "üåø", "üçÅ", "üíé", "üéà", "üåü", "üí•", "ü¶ã", "üéÄ", "üåä",
        "‚òÅÔ∏è", "üí´", "üéµ", "üèµÔ∏è", "üå∫", "üçÄ", "üêö", "üïäÔ∏è", "üîÆ", "üéá", "üå†", "üí°", "üç≠"
    ];

    // Ki·ªÉm tra n·∫øu ƒëang ·ªü trang c√° nh√¢n
    const match = window.location.pathname.match(/person(\d+)\.html/);
    if (match) {
        const personIndex = parseInt(match[1]) - 1;
        const chosenEffect = effects[personIndex % effects.length];

        let effectsList = [];
        const maxEffects = 15; // üå∏ Gi·ªõi h·∫°n s·ªë hi·ªáu ·ª©ng tr√™n m√†n h√¨nh

        function createEffect() {
            if (effectsList.length >= maxEffects) return; // N·∫øu ƒë·∫°t gi·ªõi h·∫°n, kh√¥ng t·∫°o th√™m

            const effect = document.createElement("div");
            effect.classList.add("floating-effect");
            effect.innerHTML = chosenEffect;

            let startX = Math.random() * window.innerWidth;
            let duration = Math.random() * 5 + 3; // Random th·ªùi gian r∆°i
            let amplitude = Math.random() * 100 + 50; // ƒê·ªô r·ªông l∆∞·ª£n s√≥ng
            let speed = Math.random() * 2 + 1; // T·ªëc ƒë·ªô l∆∞·ª£n

            effect.style.position = "fixed";
            effect.style.left = `${startX}px`;
            effect.style.top = "-50px"; // B·∫Øt ƒë·∫ßu t·ª´ tr√™n cao
            effect.style.fontSize = "24px";
            effect.style.opacity = Math.random() * 0.8 + 0.2;
            effect.style.zIndex = "10";
            effect.style.pointerEvents = "none"; // Kh√¥ng ·∫£nh h∆∞·ªüng UI

            document.body.appendChild(effect);
            effectsList.push(effect);

            let startTime = Date.now();

            function animateEffect() {
                let elapsed = (Date.now() - startTime) / 1000; // Th·ªùi gian ƒë√£ tr√¥i qua
                let newX = startX + Math.sin(elapsed * speed) * amplitude; // T·∫°o hi·ªáu ·ª©ng l∆∞·ª£n
                let newY = elapsed * (window.innerHeight / duration); // R∆°i xu·ªëng t·ª´ t·ª´

                effect.style.transform = `translate(${newX - startX}px, ${newY}px)`;
                effect.style.opacity = 1 - elapsed / duration; // M·ªù d·∫ßn khi g·∫ßn ch·∫°m ƒë·∫•t

                if (elapsed < duration) {
                    requestAnimationFrame(animateEffect);
                } else {
                    effect.remove();
                    effectsList = effectsList.filter(e => e !== effect);
                }
            }

            requestAnimationFrame(animateEffect);
        }

        function startEffects() {
            createEffect();
            setTimeout(startEffects, Math.random() * 1200 + 800);
        }

        document.addEventListener("visibilitychange", function () {
            if (!document.hidden) startEffects();
        });

        startEffects();
    }
});

